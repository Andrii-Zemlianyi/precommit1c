#Использовать asserts
#Использовать logos

Процедура ОповеститьПользователя(_сообщение)
    
    Сообщить(_сообщение); //TODO - переделать на logos
    
КонецПроцедуры

КоммуникацияСПользователем = Новый Консоль;

КоммуникацияСПользователем.ВывестиСтроку("Интерактивный инсталятор precommit в указанный каталог с внешними обработками 1С");
КоммуникацияСПользователем.ВывестиСтроку("Введите полный адрес каталога с вашим git репозиторием:
|");

Ответ = КоммуникацияСПользователем.ПрочитатьСтроку();

ОповеститьПользователя("Проверка возможности установки в каталог " + Ответ);
_дескрипиторКаталога = Новый Файл(ответ);
Ожидаем.Что(_дескрипиторКаталога.Существует()).ЭтоИстина();
ОповеститьПользователя("Каталог " + Ответ + " существует - ОК
|");

путьКСкрытомуКаталогу = ОбъединитьПути(Ответ,".git");
_дексрипторСкрытогоКаталогаGIT = Новый Файл(путьКСкрытомуКаталогу); 

ОповеститьПользователя("Проверка наличия сервисного каталога .GIT (или файла .git) " + Ответ);

Если _дексрипторСкрытогоКаталогаGIT.Существует() Тогда
    ОповеститьПользователя("Сервисный каталог .GIT " + путьКСкрытомуКаталогу + " существует - ОК
    |");    
Иначе
    _процессКоманды = СоздатьПроцесс("git init", Ответ ,Истина, Истина);
    _процессКоманды.Запустить();
    _процессКоманды.ОжидатьЗавершения();
    ОповеститьПользователя("Указанный каталог не находился под управлением git - произведена инициализация INFO");
КонецЕсли;

ОповеститьПользователя("Вызов спец.команды - обновления подмодулей precommit1C, про которую все забывают");
_процессКоманды = СоздатьПроцесс("git submodule update --init --recursive", ТекущийКаталог() ,Истина, Истина);
_процессКоманды.Запустить();
_процессКоманды.ОжидатьЗавершения();
ОповеститьПользователя("Подмодули обновлены - ОК");

путьККаталогуПерехватов = ОбъединитьПути(Ответ,".git","hooks");
_дескриптовКаталогаПерехвата = Новый Файл(путьКСкрытомуКаталогу); 

ОповеститьПользователя("Проверка наличия сервисного каталога hooks" + Ответ);
Если _дескриптовКаталогаПерехвата.Существует() Тогда
    ОповеститьПользователя("Сервисный каталог hooks" + путьККаталогуПерехватов + " существует - ОК
    |");
Иначе
    СоздатьКаталог(путьККаталогуПерехватов);
КонецЕсли;

ОповеститьПользователя("
|Копирование или обновление необходимых файлов:
|   ibSerice - сервисная база
|   tools\v8unpack - работа с бинарными форматами 1С
|   v8reader - читатель форм 1С
|   v8files-extractor - скрипт распаковки
|   pre-commit - скрипт для git (точка входа)
|
| - НЕ РЕАЛИЗОВАНО: ждёт своего контрибьютора, я пока копируйте вручную");


ОповеститьПользователя("Установка v8unpack в oscript/bin - НЕ РЕАЛИЗОВАНО");

ОповеститьПользователя("Вызов спец команды - поддержка русских имен в каталогах git");
_процессКоманды = СоздатьПроцесс("git config --global core.quotepath false", ТекущийКаталог() ,Истина, Истина);
_процессКоманды.Запустить();
_процессКоманды.ОжидатьЗавершения();
ОповеститьПользователя("Применена настройка поддержки русских имён - ОК");

ОповеститьПользователя("
|Инсталяция в каталог " + Ответ + "завершена
|
|" + ТекущаяДата());
